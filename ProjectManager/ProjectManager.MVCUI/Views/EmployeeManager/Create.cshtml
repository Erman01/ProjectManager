@model ProjectManager.Core.ViewModels.EmployeeViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create a new employee</h2>


@using (Html.BeginForm("Create", "EmployeeManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="col-md-3">
        <div class="form-group">
            <div class="text-center">
                <h4>Upload an Employee Image</h4>
            </div>
            <div class="col-md-10">
                <input type="file" name="file" id="file" class="form-control" />
            </div>
        </div>
    </div>

    <div class="col-md-9">
        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeModel.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeModel.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeModel.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeModel.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeModel.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeModel.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeModel.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeModel.DateOfBirth,"{0:yyyy-MM-dd}",new { htmlAttributes = new { @class = "form-control",type="date"} })
               
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeModel.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="radio">
                    <label>
                        @Html.RadioButtonFor(model => model.EmployeeModel.Gender, true) Male
                    </label>
                    <label>
                        @Html.RadioButtonFor(model => model.EmployeeModel.Gender, false) Female
                    </label>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeModel.EMail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmployeeModel.EMail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmployeeModel.EMail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeModel.DepartmentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EmployeeModel.DepartmentId, new SelectList(Model.DepartmentModels, "Id", "Name"), "Choose a Department", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>

    </div>
</div>
}

<div>
   @Html.ActionLink("Back to Admin Page","Index","AdminManager",null,new {@class="btn btn-default" }) |
    @Html.ActionLink("Go to Employee List", "Index",null,new {@class="btn btn-default" }) 
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
